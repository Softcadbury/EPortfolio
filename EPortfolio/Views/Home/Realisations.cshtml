@using EPortfolio.Helpers
@{
    string reaPiscine = @"
	    <h3>Piscine (C, Unix)</h3>
	    <h6>Septembre 2010 - 2 semaines - 1 personne</h6>
	    <h6>Projet EPITA</h6>
	    <p>
		    Pas vraiment un projet, la
		    <a href='http://blogs.ionis-group.com/epita/2010/10/plongeon_au_coeur_de_la_piscin.html' target='_blank'>piscine</a>
		    est un passage obligé d'EPITA. Durant 2 semaines, les étudiants programment de 10h à 6h non stop,
		    avec seulement 4 heures de sommeil donc!
		    Elle se termine avec 3 gros projets à faire en 3 jours, Evalxpr (Evaluateur d'expressions mathématiques),
		    Fnmatch (Comparaison de chaîne de caractères avec l'utilisation d'expressions rationnelles) et TinyPrintf (Printf basique).
	    </p>";

    string rea42sh = @"
        <h3>42sh (C)</h3>
	    <h6>Octobre 2010 - 5 semaines - 5 personnes</h6>
	    <h6>Projet EPITA</h6>
	    <p>
		    Le projet le plus important d'EPITA au premier semestre. Le 42sh est un interpréteur de commandes, semblable à
		    <a href='http://en.wikipedia.org/wiki/Bash_(Unix_shell)' target='_blank'>Bash</a>.
            Je me suis chargé entre autres du parser et de l'évaluateur d'expressions mathématiques. Utilisation de
            <a href='http://en.wikipedia.org/wiki/Apache_Subversion' target='_blank'>SVN</a> pour le versioning et de
            <a href='http://en.wikipedia.org/wiki/CMake' target='_blank'>CMake</a> pour la compilation.
        </p>";

    string reaDabaze = @"
        <h3>DaBaZe (PostgreSQL)</h3>
        <h6>Avril 2011 - 1 mois - 1 personne</h6>
        <h6>Projet EPITA</h6>
        <p>
	        Création d'une base de données simulant un voyage d'intégration avec l'outil
	        <a href='http://en.wikipedia.org/wiki/PowerDesigner' target='_blank'>PowerAMC</a>.
            Puis réalisation de procédures, de vues et de triggers sur cette base.
            <br /><br />" + ButtonHelper.FancyboxButton("mcd") + @"
        </p>";

    string reaPhotoshop = @"
        <h3>MyPhotoShop (Java)</h3>
        <h6>Avril 2011 - 2 semaines - 1 personne</h6>
        <h6>Projet EPITA</h6>
        <p>
	        Réalisation d'un photoshop like, avec l'utilisation du framework <a href='http://www.eclipse.org/swt/' target='_blank'>SWT</a>.
            Au programme, une gestion des filtres sous forme de plugin, une gestion d'historique pour les traitements que les images ont subi,
            des sauvegardes de projet grâce à la sérialisation et une gestion des threads pour des traitements parallèles.
            <br /><br />" + ButtonHelper.FancyboxButton("photoshop") + @"
        </p>";

    string reaChef = @"
        <h3>Site de cuisine (C#)</h3>
        <h6>Juin 2012 - 1 mois - 4 personnes</h6>
        <h6>Projet EPITA</h6>
        <p>
	        Conception d'un site avec comme thème le partage de recettes. La structure complète du projet a été réalisée selon un design
	        <a href='http://en.wikipedia.org/wiki/Multitier_architecture' target='_blank'>N-Tiers</a>.
            La partie site a été conçue selon l'architecture <a href='http://www.asp.net/mvc/mvc3' target='_blank'>MVC 3</a>,
            développée par Microsoft.
            <br /><br />" + ButtonHelper.FancyboxButton("chef") + @"
        </p>";

    string reaKinect = @"
        <h3>Projet Kinect (C#)</h3>
        <h6>Mars 2012 - 4 mois - 3 personnes</h6>
        <h6>Projet EPITA</h6>
        <p>
	        Réalisation d'un gestionnaire de médias utilisant la caméra Kinect de Microsoft.
	        L'utilisateur peut ouvrir et contrôler des vidéos, des musiques, des images et des fichiers textes en utilisant ses mains.
	        Les mains sont représentées sur l'écran par deux cercles rouges et un simple geste en avant simule un clic.
	        L'application est en WPF dans une architecture <a href='http://en.wikipedia.org/wiki/Model_View_ViewModel' target='_blank'>MVVM</a>
            et utilise les frameworks <a href='http://msdn.microsoft.com/en-us/library/gg406140.aspx' target='_blank'>Prism 4</a> et
            <a href='http://mef.codeplex.com/' target='_blank'>MEF</a>.
            <br /><br />" + ButtonHelper.FancyboxButton("kinect") + ButtonHelper.GithubButton("KinectProject") + @"
        </p>";

    string reaMedecin = @"
        <h3>Projet Médecin (C#)</h3>
        <h6>2012 - 1 personne</h6>
        <p>
	        Réalisation d'une application WPF simulant une interface utilisable par le personnel hospitalier.
	        En plus de WPF, l'application utilise des services WCF.
	        <br /><br />" + ButtonHelper.FancyboxButton("medecin") + ButtonHelper.GithubButton("WpfProject") + @"
        </p>";

    string reaTest = @"
        <h3>Système de test (C#)</h3>
        <h6>2011 - 3 mois - 1 personne</h6>
        <h6>Stage EPITA - Peerform</h6>
        <p>
	        Développement d’une suite de tests permettant de simuler le comportement des utilisateurs sur le site de l’entreprise.
	        Ils ont été réalisés en C#, avec l'utilisation du Framework <a href='http://seleniumhq.org/' target='_blank'>Selenium</a>.
            Un programme a également été développé pour gérer le lancement de ces tests et pour observer les résultats.
            En C# et WPF, ce programme est conçu selon une architecture
            <a href='http://en.wikipedia.org/wiki/Model_View_ViewModel' target='_blank'>MVVM</a>.
            <br /><br />" + ButtonHelper.FancyboxButton("test") + @"
        </p>";

    string reaLog = @"
        <h3>Système de log (C#)</h3>
        <h6>2011 - 1 mois - 1 personne</h6>
        <h6>Stage EPITA - Peerform</h6>
        <p>
	        Développement d'un module en C# qui utilise le Framework
	        <a href='http://logging.apache.org/log4net/' target='_blank'>log4net</a> et qui
            permet de générer des logs pour l'application de l'entreprise.
            Une partie administration a également été développée en ASP.Net, pour les consulter.
           <br /><br />" + ButtonHelper.FancyboxButton("log") + @"
        </p>";

    string reaNote = @"
        <h3>Notes (JavaScript)</h3>
        <h6>2012 - 1 personne</h6>
        <p>
	        Réalisation d'une page permettant de prendre des notes dans un format qui se veut au plus proche de la réalité.
	        <br /><br />" + ButtonHelper.TryFreeButton("notes") + ButtonHelper.GithubButton("Post-It") + @"
        </p>";

    string reaChess = @"
        <h3>Jeux d'échec (JavaScript)</h3>
        <h6>2012 - 1 personne</h6>
        <p>
	        Réalisation d'un jeu d'échec classique avec intelligence artificielle et utilisation entre autres des framework
	        <a href='http://backbonejs.org/' target='_blank'>Backbonejs</a>,
            <a href='http://underscorejs.org/' target='_blank'>Underscorejs</a> et
            <a href='http://www.redips.net/javascript/redips-drag-documentation/' target='_blank'>Redips</a>.
            <br /><br />" + ButtonHelper.TryFreeButton("chess") + ButtonHelper.GithubButton("Chess") + @"
        </p>";
}

<div id="realisations" class="container-sub display-none">
    <h1>Réalisations</h1>
    <ul class="nav nav-tabs">
        <li class="active">
            <a href="#personnels" data-toggle="tab">Personnels</a>
        </li>
        <li>
            <a href="#professionnels" data-toggle="tab">Professionnels</a>
        </li>
        <li>
            <a href="#scolaires" data-toggle="tab">Scolaires</a>
        </li>
    </ul>
    <div class="tab-content tab-content-notop tab-content-nopadding">
        <!-- Personnels -->
        <div class="tab-pane active" id="personnels">
            <div class="row">
                <div class="col-md-6">
                    <div class="realisation">@Html.Raw(reaNote)</div>
                </div>
                <div class="col-md-6">
                    <div class="realisation">@Html.Raw(reaChess)</div>
                </div>
            </div>
        </div>
        <!-- Professionnels -->
        <div class="tab-pane" id="professionnels">
            <div class="row">
                <div class="col-md-6">
                    <div class="realisation">@Html.Raw(reaLog)</div>
                </div>
                <div class="col-md-6">
                    <div class="realisation">@Html.Raw(reaTest)</div>
                </div>
            </div>
        </div>
        <!-- Scolaires -->
        <div class="tab-pane" id="scolaires">
            <div class="row">
                <div class="col-md-6">
                    <div class="realisation">@Html.Raw(reaKinect)</div>
                    <div class="realisation">@Html.Raw(reaChef)</div>
                    <div class="realisation">@Html.Raw(reaPhotoshop)</div>
                </div>
                <div class="col-md-6">
                    <div class="realisation">@Html.Raw(reaMedecin)</div>
                    <div class="realisation">@Html.Raw(reaDabaze)</div>
                    <div class="realisation">@Html.Raw(reaPiscine)</div>
                    <div class="realisation">@Html.Raw(rea42sh)</div>
                </div>
            </div>
        </div>
    </div>
</div>